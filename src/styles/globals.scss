@import './mixins/index';
@import './variables/sizes';
@import './variables/toggledVariables';

html,
body {
  padding: 0;
  margin: 0;

  background-color: $color-background;
  overflow-x: hidden;

  font-family: 'Inter Variable', $fallback-font;

  font-size: 1rem;
  @media screen and (max-width: $responsive-breakpoint) {
    font-size: 0.75rem;
  }

  &::-webkit-scrollbar-track {
    margin: $spacing;
  }
}

body {
  background-color: transparent;
  position: relative;
  &::before {
    z-index: -1;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.025;
    background-image: linear-gradient($color-text 0.1rem, transparent 0.1rem),
      linear-gradient(to right, $color-text 0.1rem, transparent 0.1rem);
    background-size: 2rem 2rem;
    background-position: 50%;
  }
}

html[data-theme='light'] {
  background: linear-gradient(
    to left,
    $color-primary-bg,
    $color-secondary-bg
  ) !important;
}

h1,
h2,
h3,
h4 {
  font-family: 'Comfortaa Variable', $fallback-font;
}

h1 {
  font-size: 2rem;
  letter-spacing: -0.1rem;
}
h2 {
  font-size: 1.75rem;
  letter-spacing: -0.05rem;
}
h3 {
  font-size: 1.25rem;
  letter-spacing: -0.025rem;
}
h4,
h5,
h6 {
  font-size: 1rem;
}

* {
  font-family: inherit;
  box-sizing: border-box;
  font-size: 1rem;

  color: $color-text;
  // All of the color transitions
  $transitionConfig: 0.1s ease-in;
  $allTransitions:
    background-color $transitionConfig,
    color $transitionConfig,
    outline-color $transitionConfig,
    text-shadow $transitionConfig,
    box-shadow $transitionConfig,
    font-weight $transitionConfig,
    opacity $transitionConfig,
    fill $transitionConfig;
  transition: $allTransitions;
  &::after,
  &::before {
    transition: $allTransitions;
  }
}

a {
  text-decoration: none;
  color: $color-button-outline;
  cursor: pointer;
}

button {
  @extend %button;

  > span {
    line-height: 1;
    color: inherit;
  }
}

input,
textarea,
button {
  border: none;
  padding: $spacing / 2;
  border-radius: $border-radius;
  font-family: $inter;
}

.danger {
  color: $color-danger;
  outline-color: $color-danger;
}

button.danger {
  background-color: $color-danger-bg;

  &:hover,
  &:focus,
  &:focus-within,
  &:focus-visible {
    &:not(:disabled) {
      background-color: $color-danger;
      color: $color-background;
    }
  }
}

.cancel {
  color: $color-reset;
  background-color: $color-reset-bg;
  outline-color: $color-reset;

  &:hover,
  &:focus,
  &:focus-within,
  &:focus-visible {
    &:not(:disabled) {
      background-color: $color-reset;
      color: $color-background;
    }
  }
}

form {
  display: flex;
  flex-direction: column;
  gap: $spacing;

  > label {
    display: flex;
    align-items: center;
    gap: 1rem;

    > input {
      width: 15rem;
      margin-left: auto;

      background-color: transparent;
      outline: 2px solid $color-secondary;

      &.error {
        outline-color: $color-danger;
      }
    }
  }
}
